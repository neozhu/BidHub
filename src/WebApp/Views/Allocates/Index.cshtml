@model WebApp.Models.Allocate
@{
    ViewBag.Title = "分拨二级记录";
}
<!-- MAIN CONTENT -->
<div id="content">

    <!-- end quick navigation bar -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-deletebutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>分拨二级记录</h2>
                    </header>

                     <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            <div class="sk-spinner sk-spinner-wave">
                              <div class="sk-rect1"></div>
                              <div class="sk-rect2"></div>
                              <div class="sk-rect3"></div>
                              <div class="sk-rect4"></div>
                              <div class="sk-rect5"></div>
                            </div>
                            <div class="widget-body-toolbar">
                                <div class="row">
                                    <div class="col-sm-8  ">
                                        <!-- 开启授权控制请参考 @@if (Html.IsAuthorize("Create") -->
                                        <div class="btn-group btn-group-sm">
                                            <button onclick="reload()" class="btn btn-default" data-rel="tooltip" data-placement="bottom" title="@Html.L("Refresh")" > <i class="fa fa-refresh"></i> @Html.L("Refresh") </button>
                                        </div>
                                        <div class="btn-group btn-group-sm">
                                            <button onclick="changestatus()" class="btn btn-default btn-primary" data-rel="tooltip" data-placement="bottom"  title="人工入库确认"> <i class="fa fa-plus"></i>  入库确认  </button>
                                        </div>
                                    
                          
                                        <div class="btn-group btn-group-sm">
                                            <button onclick="exportexcel()" class="btn btn-default" data-rel="tooltip" data-placement="bottom" title="@Html.L("Export")"> <i class="fa fa-file-excel-o"></i> @Html.L("Export") </button>
                                        </div>
                                    
                                    </div>
                                    <div class="col-sm-4 text-align-right visible-lg-inline-block">
                                        <div class="btn-group btn-group-sm">
                                            <button onclick="window.history.back()" class="btn btn-sm btn-success" data-rel="tooltip" data-placement="bottom" title="@Html.L("GoBack")"> <i class="fa fa-chevron-left"></i> @Html.L("GoBack") </button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="alert alert-warning no-margin fade in">
                                <button class="close" data-dismiss="alert">
                                    ×
                                </button>
                                <i class="fa-fw fa fa-info"></i>
                                注意事项:
                            </div>
                            <!--begin datagrid-content -->
                            <div class="table-responsive">
                                 <table id="allocates_datagrid">  
                                 </table>
                            </div>
                            <!--end datagrid-content -->
                         </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
            <!-- WIDGET END -->
        </div>
        <!-- end row -->
    </section>
    <!-- end widget grid -->
    <!-- file upload partial view -->
    <!-- RenderPartial() does exactly the same thing and is better for performance over Partial() -->
 
    <!-- end file upload partial view -->

            
</div>
<!-- END MAIN CONTENT -->

@section styles{
  <link rel="stylesheet" href="@Fingerprint.Tag("/scripts/easyui/themes/insdep/easyui.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/easyui/themes/insdep/icon.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/toastr/toastr.min.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/daterangepicker/daterangepicker.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/font/font-fileuploader.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/jquery.fileuploader.min.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/jquery.fileuploader-theme-dragdrop.css")" />
}
@section Scripts {
  <script src="@Fingerprint.Tag("/Scripts/plugin/daterangepicker/daterangepicker.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/jquery.easyui.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/plugins/datagrid-filter.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/plugins/columns-ext.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/plugins/columns-reset.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/jquery.easyui.component.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/jquery.extend.formatter.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/locale/easyui-lang-zh_CN.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/jquery.fileuploader.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/plugin/filesaver/FileSaver.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/plugin/filesaver/jquery.fileDownload.js")"></script>
  <script type="text/javascript">
      //是否强制从后台取值
      const REQUIRBACKEND = false;
      //是否开启行内编辑
      const EDITINLINE = true;
      var allocate = {};
    //手动修改记录
    function changestatus() {
      const id = $dg.datagrid('getChecked').filter(item =>item.Status=='待确认').map(item => {
        return item.Id;
      });
      if (id.length > 0) {
        $.messager.confirm("确认", "你确认要人工确认入库吗?", function (r) {
          if (r) {
            $.post('/Allocates/Confirm', { id: id })
              .done(response => {
                if (response.success) {
                  toastr.error(`入库确认成功[${id.length}]行记录`);
                  reload();
                } else {
                  $.messager.alert('错误', response.err, 'error');
                }
              })
              .fail((jqXHR, textStatus, errorThrown) => {
                $.messager.alert('异常', `${jqXHR.status}: ${jqXHR.statusText} `, 'error');
              });
          }
        })

      } else {
        $.messager.alert('提示', '请先选择待确认的记录!');
      }
    }
       //执行导出下载Excel
    function exportexcel() {
      const filterRules = JSON.stringify($dg.datagrid('options').filterRules);
      //console.log(filterRules);
      $.messager.progress({ title: '正在执行导出!' });
      let formData = new FormData();
      formData.append('filterRules', filterRules);
      formData.append('sort', 'Id');
      formData.append('order', 'asc');
      $.postDownload('/Allocates/ExportExcel', formData).then(res => {
        $.messager.progress('close');
        toastr.success('导出成功!');
      }).catch(err => {
        //console.log(err);
        $.messager.progress('close');
        $.messager.alert('导出失败', err.statusText, 'error');
      });

    }

       var editIndex = undefined;
       //重新加载数据
       function reload() {
            $dg.datagrid('unselectAll');
            $dg.datagrid('uncheckAll');
            $dg.datagrid('reload');
       }


    //删除选中的行
    function deletechecked() {
        const id = $dg.datagrid('getChecked').filter(item=>item.Id!=null && item.Id > 0).map(item => {
                   return item.Id;
                });;
        if (id.length > 0) {
           $.messager.confirm('确认', `你确定要删除这 <span class='badge bg-color-red'>${id.length} </span> 行记录?`, result => {
                if (result) {
                    dodeletechecked(id);
                    }
                });
         } else {
                $.messager.alert('提示', '请先选择要删除的记录!','question');
         }
     }
    //执行删除
    function dodeletechecked(id){
       $.post('/Allocates/DeleteChecked', { id: id })
                         .done(response => {
                                if (response.success) {
                                    toastr.error(`成功删除[${id.length}]行记录`);
                                    reload();
                                } else {
                                    $.messager.alert('错误', response.err,'error');
                                }
                          })
                          .fail((jqXHR, textStatus, errorThrown) => {
                             $.messager.alert('异常', `${jqXHR.status}: ${jqXHR.statusText} `, 'error');
                          });
    }




    //初始化定义datagrid
    var $dg = $('#allocates_datagrid');
    $(() => {
      //定义datagrid结构
      $dg.datagrid({
        //fit: false,
        //height: window.innerHeight - 385,
        rownumbers: true,
        checkOnSelect: false,
        selectOnCheck: false,
        idField: 'Id',
        sortName: 'Id',
        sortOrder: 'desc',
        remoteFilter: true,
        singleSelect: true,
        //url: '/Allocates/GetData',
        method: 'get',
        pagination: true,
        clientPaging: false,
        striped: true,
        pageList: [10, 20, 50, 100, 500, 2000],
        filterRules: [],
        onHeaderContextMenu: function (e, field) {
          e.preventDefault();
          $(this).datagrid('columnMenu').menu('show', {
            left: e.pageX,
            top: e.pageY
          });
        },
        onBeforeLoad: function () {
          //datagrid resize when jarvisWidgets resized.
          const that = $(this);
          $(window).on("resize.jarvisWidgets", () => {
            that.datagrid('resize');
          })
        },
        onLoadSuccess: function (data) {
          editIndex = undefined;
          $('[data-toggle="tooltip"]').tooltip();
        },

        frozenColumns: [[
          /*开启CheckBox选择功能*/
          { field: 'ck', checkbox: true },
        ]],
        columns: [[
          {    /*状态*/
            field: 'Status',
            title: '@Html.DisplayNameFor(model => model.Status)',
            width: 100,
            align: 'right',
            hidden: false,
            editor: {
              /*需要在键值对中维护status枚举值并生成JavaScript才能使用*/
              type: 'statuseditor',
              options: {
                prompt: '@Html.DisplayNameFor(model => model.Status)',
                required: false
              }
            },
            formatter: statusformatter
          },
          {    /*二级库名*/
            field: 'Loc',
            title: '@Html.DisplayNameFor(model => model.Loc)',
            width: 120,
            hidden: false,
            sortable: true,
            resizable: true
          },
          {    /*领说明*/
            field: 'Remark',
            title: '@Html.DisplayNameFor(model => model.Remark)',
            width: 180,
            hidden: false,
            sortable: true,
            resizable: true
          },
          {    /*单位*/
            field: 'Unit',
            title: '@Html.DisplayNameFor(model => model.Unit)',
            width: 70,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.Unit)', required: false, validType: 'length[0,10]' }
            },
            sortable: true,
            resizable: true
          },
          {    /*领用数量*/
            field: 'Qty',
            title: '@Html.DisplayNameFor(model => model.Qty)',
            width: 100,
            align: 'right',
            hidden: false,
            formatter: numberformatter,
            sortable: true,
            resizable: true
          },


          {   /*收货日期*/
            field: 'ReceivedDate',
            title: '@Html.DisplayNameFor(model => model.ReceivedDate)',
            width: 100,
            align: 'right',
            hidden: false,
            editor: {
              type: 'datebox',
              options: { prompt: '@Html.DisplayNameFor(model => model.ReceivedDate)', required: false }
            },
            formatter: dateformatter,
            sortable: true,
            resizable: true
          },
          {   /*领用日期*/
            field: 'OuboundDate',
            title: '@Html.DisplayNameFor(model => model.OuboundDate)',
            width: 100,
            align: 'right',
            hidden: false,
            formatter: dateformatter,
            sortable: true,
            resizable: true
          },
          {   /*领用日期*/
            field: 'ConfirmDate',
            title: '@Html.DisplayNameFor(model => model.ConfirmDate)',
            width: 100,
            align: 'right',
            hidden: false,
            formatter: dateformatter,
            sortable: true,
            resizable: true
          },
          {    /*领用人*/
            field: 'RecordUser',
            title: '@Html.DisplayNameFor(model => model.RecordUser)',
            width: 120,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.RecordUser)', required: false, validType: 'length[0,20]' }
            },
            sortable: true,
            resizable: true
          },
          {    /*采购单号*/
            field: 'PO',
            title: '@Html.DisplayNameFor(model => model.PO)',
            width: 120,
            hidden: false,
            sortable: true,
            resizable: true
          },
          {    /*序号*/
            field: 'LineNum',
            title: '@Html.DisplayNameFor(model => model.LineNum)',
            width: 120,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.LineNum)', required: true, validType: 'length[0,3]' }
            },
            sortable: true,
            resizable: true
          },
          {    /*货号*/
            field: 'ProductNo',
            title: '@Html.DisplayNameFor(model => model.ProductNo)',
            width: 200,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.ProductNo)', required: false, validType: 'length[0,50]' }
            },
            sortable: true,
            resizable: true
          },
          {    /*品名*/
            field: 'ProductName',
            title: '@Html.DisplayNameFor(model => model.ProductName)',
            width: 200,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.ProductName)', required: true, validType: 'length[0,100]' }
            },
            sortable: true,
            resizable: true
          },
          {    /*规格*/
            field: 'Spec',
            title: '@Html.DisplayNameFor(model => model.Spec)',
            width: 200,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.Spec)', required: false, validType: 'length[0,100]' }
            },
            sortable: true,
            resizable: true
          },
          {    /*投标品牌*/
            field: 'BrandName',
            title: '@Html.DisplayNameFor(model => model.BrandName)',
            width: 200,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.BrandName)', required: false, validType: 'length[0,100]' }
            },
            sortable: true,
            resizable: true
          },
          {    /*参数*/
            field: 'Feature',
            title: '@Html.DisplayNameFor(model => model.Feature)',
            width: 260,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.Feature)', required: false, validType: 'length[0,500]' }
            },
            sortable: true,
            resizable: true
          },

          {    /*中标供应商*/
            field: 'SupplierName',
            title: '@Html.DisplayNameFor(model => model.SupplierName)',
            width: 200,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.SupplierName)', required: false, validType: 'length[0,50]' }
            },
            sortable: true,
            resizable: true
          },



          {    /*备注*/
            field: 'Description',
            title: '@Html.DisplayNameFor(model => model.Description)',
            width: 260,
            hidden: false,
            editor: {
              type: 'textbox',
              options: { prompt: '@Html.DisplayNameFor(model => model.Description)', required: false, validType: 'length[0,512]' }
            },
            sortable: true,
            resizable: true
          },

        ]]
      })
        .datagrid('enableFilter', [
          /*需要在键值队维护好status枚举值*/
          {  /*状态*/
            field: 'Status',
            type: 'statusfilter',
            options: {

            }
          },
          {  /*状态*/
            field: 'Loc',
            type: 'locfilter',
            options: {

            }
          },
          {   /*主键*/
            field: 'Id',
            type: 'numberbox',
            op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
          },
          {   /*领用数量*/
            field: 'Qty',
            type: 'numberbox',
            op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
          },
          {     /*申请日期*/
            field: 'PODate',
            type: 'dateRange',
            options: {
            }
          },
          {     /*收货日期*/
            field: 'ReceivedDate',
            type: 'dateRange',
            options: {
            }
          },
          {     /*领用日期*/
            field: 'OuboundDate',
            type: 'dateRange',
            options: {
            }
          },

        ])
        .datagrid('load', '/Allocates/GetData');
    });

  </script>



}

 
