@model WebApp.Models.Outbound
@{
    ViewBag.Title = "领用记录";
}
<!-- MAIN CONTENT -->
<div id="content">
    <!-- quick navigation bar -->
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-table fa-fw "></i>
                采购中心
                <span>
                    >
                  领用记录
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            
        </div>
    </div>
    <!-- end quick navigation bar -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-deletebutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>领用记录</h2>
                    </header>

                     <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            <div class="sk-spinner sk-spinner-wave">
                              <div class="sk-rect1"></div>
                              <div class="sk-rect2"></div>
                              <div class="sk-rect3"></div>
                              <div class="sk-rect4"></div>
                              <div class="sk-rect5"></div>
                            </div>
                            <div class="widget-body-toolbar">
                                <div class="row">
                                    <div class="col-sm-8  ">
                                        <!-- 开启授权控制请参考 @@if (Html.IsAuthorize("Create") -->
                                        <div class="btn-group btn-group-sm">
                                            <button onclick="reload()" class="btn btn-default" data-rel="tooltip" data-placement="bottom" title="@Html.L("Refresh")" > <i class="fa fa-refresh"></i> @Html.L("Refresh") </button>
                                        </div>
                                         
                                         
                                        <div class="btn-group btn-group-sm hidden-xs hidden-md">
                                            <button onclick="exportexcel()" class="btn btn-default" data-rel="tooltip" data-placement="bottom" title="@Html.L("Export")"> <i class="fa fa-file-excel-o"></i> @Html.L("Export") </button>
                                        </div>
                                        
                                    </div>
                                    <div class="col-sm-4 text-align-right visible-lg-inline-block">
                                        <div class="btn-group btn-group-sm">
                                            <button onclick="window.history.back()" class="btn btn-sm btn-success" data-rel="tooltip" data-placement="bottom" title="@Html.L("GoBack")"> <i class="fa fa-chevron-left"></i> @Html.L("GoBack") </button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="alert alert-warning no-margin fade in">
                                <button class="close" data-dismiss="alert">
                                    ×
                                </button>
                                <i class="fa-fw fa fa-info"></i>
                                注意事项:
                            </div>
                            <!--begin datagrid-content -->
                            <div class="table-responsive">
                                 <table id="outbounds_datagrid">  
                                 </table>
                            </div>
                            <!--end datagrid-content -->
                         </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
            <!-- WIDGET END -->
        </div>
        <!-- end row -->
    </section>
    <!-- end widget grid -->
    <!-- file upload partial view -->
    <!-- RenderPartial() does exactly the same thing and is better for performance over Partial() -->
    @{ Html.RenderPartial("_ImportWindow",new ViewDataDictionary {{ "EntityName","Outbound" }}); }		 
    <!-- end file upload partial view -->
    <!-- detail popup window -->
    @{ Html.RenderPartial("_PopupDetailFormView",new WebApp.Models.Outbound()); }
    <!-- end detail popup window -->
            
</div>
<!-- END MAIN CONTENT -->

@section styles{
  <link rel="stylesheet" href="@Fingerprint.Tag("/scripts/easyui/themes/insdep/easyui.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/easyui/themes/insdep/icon.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/toastr/toastr.min.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/daterangepicker/daterangepicker.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/font/font-fileuploader.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/jquery.fileuploader.min.css")" />
  <link rel="stylesheet" href="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/jquery.fileuploader-theme-dragdrop.css")" />
}
@section Scripts {
  <script src="@Fingerprint.Tag("/Scripts/plugin/daterangepicker/daterangepicker.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/jquery.easyui.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/plugins/datagrid-filter.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/plugins/columns-ext.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/plugins/columns-reset.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/jquery.easyui.component.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/jquery.extend.formatter.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/easyui/locale/easyui-lang-zh_CN.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/plugin/jquery.fileuploader/jquery.fileuploader.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/plugin/filesaver/FileSaver.min.js")"></script>
  <script src="@Fingerprint.Tag("/Scripts/plugin/filesaver/jquery.fileDownload.js")"></script>
<script type="text/javascript">
      //是否强制从后台取值
      const REQUIRBACKEND = false;
      //是否开启行内编辑
      const EDITINLINE = false;
      var outbound = {};

       //执行导出下载Excel
       function exportexcel() {
                const filterRules = JSON.stringify($dg.datagrid('options').filterRules);
                //console.log(filterRules);
                $.messager.progress({ title: '正在执行导出!' });
                let formData = new FormData();
                formData.append('filterRules', filterRules);
                formData.append('sort', 'Id');
                formData.append('order', 'asc');
                $.postDownload('/Outbounds/ExportExcel', formData).then(res => {
                    $.messager.progress('close');
                    toastr.success('导出成功!');
                }).catch(err => {
                    //console.log(err);
                    $.messager.progress('close');
                    $.messager.alert('导出失败', err.statusText, 'error');
                });

        }
        
       //重新加载数据
       function reload() {
            $dg.datagrid('unselectAll');
            $dg.datagrid('uncheckAll');
            $dg.datagrid('reload');
       }
       
    //弹出明细信息
    async function showdetailswindow(id,index) {
 
        openoutbounddetailwindow(outbound,'Modified');
    }

    //初始化定义datagrid
    var $dg = $('#outbounds_datagrid');
    $(() => {
        //定义datagrid结构
       $dg.datagrid({
                        //fit: false,
                        //height: window.innerHeight - 385,
                        rownumbers:true,
                        checkOnSelect:false,
                        selectOnCheck:false,
                        idField:'Id',
                        sortName:'Id',
                        sortOrder:'desc',
                        remoteFilter: true,
                        singleSelect: true,
                        //url: '/Outbounds/GetData',
                        method: 'get',
                        pagination: true,
                        clientPaging:false,
                        striped:true,
                        pageList: [10, 20, 50, 100, 500,2000],
                        filterRules: [],
                        onBeforeLoad: function () {
                           //datagrid resize when jarvisWidgets resized.
                           const that = $(this);
                           $(window).on("resize.jarvisWidgets", () => {
                               that.datagrid('resize');
                           })
                         },
                         onLoadSuccess: function (data) {
                           
                            
                        },
                        onCheck: function () {
                          $("button[name*='deletebutton']").prop('disabled', false);
                        },
                        onUncheck: function () {
                           const checked = $(this).datagrid('getChecked').length > 0;
                           $("button[name*='deletebutton']").prop('disabled', !checked);
                        },
                        onCheckAll: function () {
                          $("button[name*='deletebutton']").prop('disabled', false);
                        },
                        onUncheckAll: function () {
                          $("button[name*='deletebutton']").prop('disabled', true);
                        },
                        onSelect: function(index,row) {
                           outbound = row;
                        },
                        
                        frozenColumns: [[
                         /*开启CheckBox选择功能*/
                         { field: 'ck', checkbox: true },
                         
                        ]],
                        columns: [[

            {    /*采购单号*/
                 field:'PO', 
                 title:'<span class="text-danger">*</span>@Html.DisplayNameFor(model => model.PO)', 
                 width:120,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*序号*/
                 field:'LineNum', 
                 title:'<span class="text-danger">*</span>@Html.DisplayNameFor(model => model.LineNum)', 
                 width:80,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
           
            {   /*领用日期*/
                field:'OuboundDate', 
                title:'<span class="text-danger">*</span>@Html.DisplayNameFor(model => model.OuboundDate)', 
                width:100, 
                align:'right',
                hidden:false,
                formatter:dateformatter, 
                sortable:true, 
                resizable:true
            } ,
            {    /*领用人*/
                 field:'RecordUser', 
                 title:'@Html.DisplayNameFor(model => model.RecordUser)', 
                 width:120,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*品名*/
                 field:'ProductName', 
                 title:'<span class="text-danger">*</span>@Html.DisplayNameFor(model => model.ProductName)', 
                 width:180,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*规格*/
                 field:'Spec', 
                 title:'@Html.DisplayNameFor(model => model.Spec)', 
                 width:160,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*建议品牌*/
                 field:'BrandName', 
                 title:'@Html.DisplayNameFor(model => model.BrandName)', 
                 width:160,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*单位*/
                 field:'Unit', 
                 title:'@Html.DisplayNameFor(model => model.Unit)', 
                 width:80,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*领用数量*/
                 field:'Qty', 
                 title:'<span class="text-danger">*</span>@Html.DisplayNameFor(model => model.Qty)', 
                 width:100, 
                 align:'right',
                 hidden:false,
                formatter:numberformatter,
                sortable:true,
                resizable:true 
            },
                          {    /*剩余数量*/
                            field: 'StockQty',
                            title: '<span class="text-danger">*</span>@Html.DisplayNameFor(model => model.StockQty)',
                            width: 100,
                            align: 'right',
                            hidden: false,
                            formatter: numberformatter,
                            sortable: true,
                            resizable: true
                          },
           
            {    /*参数*/
                 field:'Feature', 
                 title:'@Html.DisplayNameFor(model => model.Feature)', 
                 width:260,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*备注*/
                 field:'Description', 
                 title:'@Html.DisplayNameFor(model => model.Description)', 
                 width:260,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
            {    /*领用说明*/
                 field:'Remark', 
                 title:'@Html.DisplayNameFor(model => model.Remark)', 
                 width:260,
                 hidden:false,
                 sortable:true,
                 resizable:true 
            },
                 ]]
           })
             .datagrid('enableFilter',[
                {   /*领用数量*/
                      field: 'Qty',
                      type: 'numberbox',
                      op:['equal','notequal','less','lessorequal','greater','greaterorequal']
                  },
                {   /*剩余数量*/
                      field: 'StockQty',
                      type: 'numberbox',
                      op:['equal','notequal','less','lessorequal','greater','greaterorequal']
                  },
                {   /*中标价格*/
                      field: 'BidedPrice',
                      type: 'numberbox',
                      op:['equal','notequal','less','lessorequal','greater','greaterorequal']
                  },
                {   /*金额*/
                      field: 'Amount',
                      type: 'numberbox',
                      op:['equal','notequal','less','lessorequal','greater','greaterorequal']
                  },
                {     /*申请日期*/
                      field: 'PODate',
                      type: 'dateRange',
                      options: {
                      }
                  },
                {     /*收货日期*/
                      field: 'ReceivedDate',
                      type: 'dateRange',
                      options: {
                      }
                  },
                {     /*领用日期*/
                      field: 'OuboundDate',
                      type: 'dateRange',
                      options: {
                      }
                  },
           ])
           .datagrid('load', '/Outbounds/GetData');
     });
 
</script>



}

 
